#!/usr/bin/env python3
import math
import random

def is_prime(n, k=5): # number of Rabin-Miller tests
    if n < 2: return False
    for p in [2,3,5,7,11,13,17,19,23,29]:
        if n % p == 0: return n == p
    s, d = 0, n-1
    while d % 2 == 0:
        s, d = s+1, d//2
    for _ in range(k):
        x = pow(random.randint(2, n-1), d, n)
        if x == 1 or x == n-1: continue
        for _ in range(s-1):
            x = pow(x, 2, n)
            if x == n-1: break
        else: return False
    return True

def find_prime_factors(n):
    for i in range(2, math.isqrt(n) + 1):
        if n % i == 0:
            if is_prime(i) and is_prime(n // i):
                return i, n // i
    return None

def factorize_file(filename):
    with open(filename, 'r') as file:
        n = int(file.readline().strip())
        factors = find_prime_factors(n)
        if factors:
            print(f"{n}={factors[0]}*{factors[1]}")
        else:
            print(f"No prime factors found for {n} within time limit.")

# Call the function with the path to your file
# factorize_file('<path_to_your_file>')

